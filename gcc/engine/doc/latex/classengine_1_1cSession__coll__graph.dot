digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{engine::cSession\n|- m_SessionId\l- m_State\l- m_PendingCommand\l|+ cSession()\l+ cSession()\l+ ~cSession()\l+ RunCommand()\l+ ScheduleCommand()\l+ TerminateCommand()\l+ GetPendingCommand()\l+ GetState()\l+ SetState()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" sThreadPool" ,arrowhead="odiamond"];
  Node2 [label="{engine::cThreadPool\n|- m_ThreadPool\l- m_Num_Threads\l- m_Started\l|+ cThreadPool()\l+ ~cThreadPool()\l+ StartPool()\l+ StopPool()\l+ AddToCommandQueue()\l+ isStarted()\l- Run()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classengine_1_1cThreadPool.html"];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" m_CommandQueue" ,arrowhead="odiamond"];
  Node3 [label="{engine::cCommandQueue\n|- m_Mutex\l- m_NotEmptyCond\l|+ cCommandQueue()\l+ ~cCommandQueue()\l+ Put()\l+ Remove()\l+ Empty()\l+ GetSize()\l# Put_i()\l# Remove_i()\l# Empty_i()\l# GetSize_i()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classengine_1_1cCommandQueue.html"];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" m_Queue" ,arrowhead="odiamond"];
  Node4 [label="{std::queue\< boost:\l:shared_ptr\< cCommand \> \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< boost::shared_ptr\l\< cCommand \> \>" ];
  Node5 [label="{std::queue\< T \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" elements" ,arrowhead="odiamond"];
  Node6 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
