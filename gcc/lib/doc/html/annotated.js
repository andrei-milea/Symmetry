var annotated =
[
    [ "tree", null, [
      [ "cBinaryRep", "classtree_1_1cBinaryRep.html", "classtree_1_1cBinaryRep" ],
      [ "cBinaryTree", "classtree_1_1cBinaryTree.html", null ],
      [ "btree_iterator", "classtree_1_1btree__iterator.html", "classtree_1_1btree__iterator" ],
      [ "btree_preorder_iterator", "classtree_1_1btree__preorder__iterator.html", "classtree_1_1btree__preorder__iterator" ],
      [ "btree_inorder_iterator", "classtree_1_1btree__inorder__iterator.html", "classtree_1_1btree__inorder__iterator" ],
      [ "btree_postorder_iterator", "classtree_1_1btree__postorder__iterator.html", "classtree_1_1btree__postorder__iterator" ],
      [ "btree_iterator< T, btree_threaded_node< T > >", "classtree_1_1btree__iterator_3_01T_00_01btree__threaded__node_3_01T_01_4_01_4.html", "classtree_1_1btree__iterator_3_01T_00_01btree__threaded__node_3_01T_01_4_01_4" ],
      [ "btree_inorder_iterator< T, btree_threaded_node< T > >", "classtree_1_1btree__inorder__iterator_3_01T_00_01btree__threaded__node_3_01T_01_4_01_4.html", "classtree_1_1btree__inorder__iterator_3_01T_00_01btree__threaded__node_3_01T_01_4_01_4" ],
      [ "cThreadedRep", "classtree_1_1cThreadedRep.html", "classtree_1_1cThreadedRep" ],
      [ "btree_node", "structtree_1_1btree__node.html", "structtree_1_1btree__node" ],
      [ "btree_threaded_node", "structtree_1_1btree__threaded__node.html", "structtree_1_1btree__threaded__node" ]
    ] ],
    [ "Addition", "classAddition.html", "classAddition" ],
    [ "cAbsVal", "classcAbsVal.html", "classcAbsVal" ],
    [ "cAcosine", "classcAcosine.html", "classcAcosine" ],
    [ "cAcotangent", "classcAcotangent.html", "classcAcotangent" ],
    [ "cAsine", "classcAsine.html", "classcAsine" ],
    [ "cAtangent", "classcAtangent.html", "classcAtangent" ],
    [ "cCayleyGrf", "classcCayleyGrf.html", "classcCayleyGrf" ],
    [ "cCommuteVisitor", "structcCommuteVisitor.html", "structcCommuteVisitor" ],
    [ "cCosine", "classcCosine.html", "classcCosine" ],
    [ "cCotangent", "classcCotangent.html", "classcCotangent" ],
    [ "cDiffVisitor", "classcDiffVisitor.html", "classcDiffVisitor" ],
    [ "cEmptyExpr", "structcEmptyExpr.html", "structcEmptyExpr" ],
    [ "cEvalExprlVisitor", "classcEvalExprlVisitor.html", "classcEvalExprlVisitor" ],
    [ "cEvalVisitor", "classcEvalVisitor.html", "classcEvalVisitor" ],
    [ "cExponential", "classcExponential.html", "classcExponential" ],
    [ "cExprDiffVisitor", "classcExprDiffVisitor.html", "classcExprDiffVisitor" ],
    [ "cExprPartDiffVisitor", "classcExprPartDiffVisitor.html", "classcExprPartDiffVisitor" ],
    [ "cFuncExpr", "classcFuncExpr.html", "classcFuncExpr" ],
    [ "cGenRep", "classcGenRep.html", "classcGenRep" ],
    [ "cGroup", "classcGroup.html", "classcGroup" ],
    [ "cGroupElem", "classcGroupElem.html", "classcGroupElem" ],
    [ "cGroupRelation", "classcGroupRelation.html", "classcGroupRelation" ],
    [ "cGrpLattice", "classcGrpLattice.html", "classcGrpLattice" ],
    [ "cHomomorphism", "classcHomomorphism.html", "classcHomomorphism" ],
    [ "cIntModNElem", "classcIntModNElem.html", "classcIntModNElem" ],
    [ "cLinEqSys", "classcLinEqSys.html", "classcLinEqSys" ],
    [ "cLogarithm", "classcLogarithm.html", "classcLogarithm" ],
    [ "cMultivarPolynomial", "classcMultivarPolynomial.html", "classcMultivarPolynomial" ],
    [ "coeff_list", "structcoeff__list.html", null ],
    [ "Composition", "classComposition.html", "classComposition" ],
    [ "cOutputVisitor", "classcOutputVisitor.html", "classcOutputVisitor" ],
    [ "cPermElem", "classcPermElem.html", "classcPermElem" ],
    [ "cSimplifyVisitor", "classcSimplifyVisitor.html", "classcSimplifyVisitor" ],
    [ "cSine", "classcSine.html", "classcSine" ],
    [ "cSLPRep", "classcSLPRep.html", "classcSLPRep" ],
    [ "cSubgroup", "classcSubgroup.html", "classcSubgroup" ],
    [ "cSymmetricRep", "classcSymmetricRep.html", "classcSymmetricRep" ],
    [ "cTangent", "classcTangent.html", "classcTangent" ],
    [ "cUnivarPolynomial", "classcUnivarPolynomial.html", "classcUnivarPolynomial" ],
    [ "cVariable", "classcVariable.html", "classcVariable" ],
    [ "Division", "classDivision.html", "classDivision" ],
    [ "Factorial", "structFactorial.html", "structFactorial" ],
    [ "Factorial< 0 >", "structFactorial_3_010_01_4.html", "structFactorial_3_010_01_4" ],
    [ "Multiplication", "classMultiplication.html", "classMultiplication" ],
    [ "multivariate", "structmultivariate.html", null ],
    [ "NoOp", "structNoOp.html", "structNoOp" ],
    [ "point_value", "structpoint__value.html", null ],
    [ "polynomial_impl", "structpolynomial__impl.html", null ],
    [ "polynomial_impl< T, multivariate, coeff_list >", "structpolynomial__impl_3_01T_00_01multivariate_00_01coeff__list_01_4.html", "structpolynomial__impl_3_01T_00_01multivariate_00_01coeff__list_01_4" ],
    [ "polynomial_impl< T, multivariate, point_value >", "structpolynomial__impl_3_01T_00_01multivariate_00_01point__value_01_4.html", "structpolynomial__impl_3_01T_00_01multivariate_00_01point__value_01_4" ],
    [ "polynomial_impl< T, univariate, coeff_list >", "structpolynomial__impl_3_01T_00_01univariate_00_01coeff__list_01_4.html", "structpolynomial__impl_3_01T_00_01univariate_00_01coeff__list_01_4" ],
    [ "polynomial_impl< T, univariate, point_value >", "structpolynomial__impl_3_01T_00_01univariate_00_01point__value_01_4.html", "structpolynomial__impl_3_01T_00_01univariate_00_01point__value_01_4" ],
    [ "polynomial_traits", "structpolynomial__traits.html", "structpolynomial__traits" ],
    [ "Power", "classPower.html", "classPower" ],
    [ "Subtraction", "classSubtraction.html", "classSubtraction" ],
    [ "univariate", "structunivariate.html", null ]
];